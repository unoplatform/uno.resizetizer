<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>netstandard2.0</TargetFramework>
		<RootNamespace>Uno.Resizetizer</RootNamespace>
		<DevelopmentDependency>true</DevelopmentDependency>
		<LangVersion>latest</LangVersion>
		<Configurations>Debug;Release;DEBUG_RESIZETIZER</Configurations>
		<BuildOutputTargetFolder>build</BuildOutputTargetFolder>
		<CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
		<SuppressDependenciesWhenPacking>true</SuppressDependenciesWhenPacking>
		
		<!-- Version management is now done through NuGet, this avoids issues related version mismatch -->
		<Version>255.255.255.255</Version>
		<UnoNuspecDirectory>$([MSBuild]::NormalizeDirectory('$(MSBuildThisFileDirectory)', '..', '..', '.nuspec'))</UnoNuspecDirectory>
		<SamplesPackageDirectory>$([MSBuild]::NormalizeDirectory('$(MSBuildThisFileDirectory)', '..', '..', '..', 'samples', 'packages'))</SamplesPackageDirectory>
		<DefaultLanguage>en-US</DefaultLanguage>

		<!-- Integration testing should happen with the NuGet and not local assets -->
		<IsPackable>true</IsPackable>
	</PropertyGroup>

	<PropertyGroup>
		<AssemblyName>Uno.Resizetizer_v0</AssemblyName>		
		<RepositoryCommit>$(GITVERSION_SHA)</RepositoryCommit>
		<PackageId>Uno.Resizetizer</PackageId>
		<Description>Uno Platform package support for images.</Description>
		<PackageReadmeFile>README.md</PackageReadmeFile>
	</PropertyGroup>

	<ItemGroup>
		<EmbeddedResource Include="Resources\UnoSplash.storyboard" LogicalName="UnoSplash.storyboard" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="HarfBuzzSharp" Version="$(_HarfBuzzSharpVersion)" />
		<PackageReference Include="HarfBuzzSharp.NativeAssets.Linux" Version="$(_HarfBuzzSharpVersion)" />
		<PackageReference Include="HarfBuzzSharp.NativeAssets.Win32" Version="$(_HarfBuzzSharpVersion)" />
		<PackageReference Include="HarfBuzzSharp.NativeAssets.macOS" Version="$(_HarfBuzzSharpVersion)" />
		<PackageReference Include="Microsoft.Build.Framework" Version="16.7.0" />
		<PackageReference Include="Microsoft.Build.Utilities.Core" Version="16.7.0" />
		<PackageReference Include="SkiaSharp" Version="$(_SkiaSharpVersion)" />
		<PackageReference Include="SkiaSharp.NativeAssets.Win32" Version="$(_SkiaSharpVersion)" />
		<PackageReference Include="SkiaSharp.NativeAssets.macOS" Version="$(_SkiaSharpVersion)" />
		<PackageReference Include="SkiaSharp.NativeAssets.Linux.NoDependencies" Version="$(_SkiaSharpVersion)" />
		<PackageReference Include="SkiaSharp.HarfBuzz" Version="$(_SkiaSharpVersion)" />
		<PackageReference Include="ExCSS" Version="4.2.3"  />
		<PackageReference Include="Svg.Skia" Version="$(SvgSkiaPackageVersion)" />
		<PackageReference Include="Svg.Custom" Version="$(SvgSkiaPackageVersion)" />
		<PackageReference Include="Svg.Model" Version="$(SvgSkiaPackageVersion)" />
		<PackageReference Include="ShimSkiaSharp" Version="$(SvgSkiaPackageVersion)" />
		<PackageReference Include="Fizzler" Version="$(FizzlerPackageVersion)" />
		<PackageReference Include="System.Memory" Version="4.5.5" />
		<PackageReference Include="System.Buffers" Version="4.5.1" />
		<PackageReference Include="System.Text.Json" Version="7.0.3" />
		<PackageReference Include="System.Text.Encodings.Web" Version="7.0.0" />
		<PackageReference Include="Microsoft.Bcl.AsyncInterfaces" Version="7.0.0" />
		<PackageReference Include="System.IO.UnmanagedMemoryStream" Version="4.3.0" />
		<PackageReference Include="System.Numerics.Vectors" Version="4.5.0" />
		<PackageReference Include="System.Runtime.CompilerServices.Unsafe" Version="6.0.0" />
		<PackageReference Include="System.ObjectModel" Version="4.3.0" />
		<PackageReference Include="Mono.ApiTools.MSBuildTasks" Version="0.1.0" />
	</ItemGroup>

	<ItemGroup>
		<None Include="../../../README.md" Pack="true" PackagePath="/" />

		<None Include="$(UnoNuspecDirectory)Uno.Resizetizer.targets" Visible="false" Pack="true" PackagePath="build/$(PackageId).targets" CopyToOutputDirectory="PreserveNewest" />
		<None Include="$(UnoNuspecDirectory)Uno.Resizetizer.android.targets" Visible="false" Pack="true" PackagePath="build/$(PackageId).android.targets" CopyToOutputDirectory="PreserveNewest" />
		<None Include="$(UnoNuspecDirectory)Uno.Resizetizer.apple.targets" Visible="false" Pack="true" PackagePath="build/$(PackageId).apple.targets" CopyToOutputDirectory="PreserveNewest" />
		<None Include="$(UnoNuspecDirectory)Uno.Resizetizer.wasm.targets" Visible="false" Pack="true" PackagePath="build/$(PackageId).wasm.targets" CopyToOutputDirectory="PreserveNewest" />
		<None Include="$(UnoNuspecDirectory)Uno.Resizetizer.windows.skia.targets" Visible="false" Pack="true" PackagePath="build/$(PackageId).windows.skia.targets" CopyToOutputDirectory="PreserveNewest" />
	</ItemGroup>

	<Import Project="../Directory.UnoMetadata.targets" />

	<!-- Gets the Runtime Assets that need to be copied to the NuGet -->
	<Target Name="GatherRuntimeAssets"
		BeforeTargets="PackNuGetLockFiles;CopyAssetsForSampleProject">
		<ItemGroup>
			<_RuntimeAssets Include="@(RuntimeTargetsCopyLocalItems)"
				DestinationSubDirectory="%(RuntimeTargetsCopyLocalItems.DestinationSubDirectory)"

				OutputDirectory="$([System.Text.RegularExpressions.Regex]::Replace(%(RuntimeTargetsCopyLocalItems.RuntimeIdentifier), '^(linux|win)-', ''))"
				Condition="%(RuntimeTargetsCopyLocalItems.RuntimeIdentifier) != 'win' AND %(RuntimeTargetsCopyLocalItems.RuntimeIdentifier) != 'unix'" />
		</ItemGroup>
	</Target>

	<!-- Updates the NuGet assets with the output assemblies and Runtime assets -->
	<Target Name="PackNuGetLockFiles"
			BeforeTargets="DownloadAndSetPackageIcon;Pack;GenerateNuspec">
		<ItemGroup>
			<None Include="@(ReferenceCopyLocalPaths)" Pack="true" PackagePath="$(BuildOutputTargetFolder)/$(TargetFramework)" />
			<None Include="@(_RuntimeAssets)" Pack="true" PackagePath="$(BuildOutputTargetFolder)/$(TargetFramework)/%(_RuntimeAssets.DestinationSubDirectory)" />
		</ItemGroup>
	</Target>

	<!-- Copies the generated NuGet for use with the sample apps -->
	<Target Name="ResizetizerIntegrationTests"
		AfterTargets="Pack">
		<RemoveDir Directories="$(SamplesPackageDirectory)" />
		<Copy SourceFiles="@(NuGetPackOutput)"
			DestinationFolder="$(SamplesPackageDirectory)"
			SkipUnchangedFiles="false"
			OverwriteReadOnlyFiles="true"
			Condition="%(Extension) == '.nupkg'" />
	</Target>

	<!-- Deletes the local cache files for the NuGet to assist in Dev/Testing -->
	<Target Name="DeleteCachedPackage" Condition="'$(CI)' != 'true'" BeforeTargets="Pack">
		<ItemGroup>
			<ToDelete Include="$(PackageOutputPath)\$(PackageId).$(GitBaseVersionMajor).$(GitBaseVersionMinor).$(GitBaseVersionPatch)*.*" />
			<ToDelete Include="$(LocalArtifactStagingDirectory)\$(PackageId).$(GitBaseVersionMajor).$(GitBaseVersionMinor).*" />
		</ItemGroup>
		<Delete Files="@(ToDelete)" />
		<Exec Command="rd &quot;$(NuGetPackageRoot)$(PackageId.ToLowerInvariant())&quot; /q /s"
			Condition="Exists('$(NuGetPackageRoot)$(PackageId.ToLowerInvariant())') And '$(OS)' == 'Windows_NT'" />
		<Exec Command="rm -rf &quot;$(NuGetPackageRoot)$(PackageId.ToLowerInvariant())&quot;"
			Condition="Exists('$(NuGetPackageRoot)$(PackageId.ToLowerInvariant())') And '$(OS)' != 'Windows_NT'" />
	</Target>

</Project>
